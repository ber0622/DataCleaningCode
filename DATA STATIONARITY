# Importing libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt 
from statsmodels.tsa.stattools import adfuller, kpss 
 
# Load your time series data 
eabldata = pd.read_csv('C://Users//ADMIN//OneDrive//Desktop//EABL_STOCK_PRICE_CLEANED.csv')

# Assuming the dataset has columns 'Date' and 'Close'
eabldata['Date'] = pd.to_datetime(eabldata['Date'])  # Convert 'Date' column to datetime
eabldata.set_index('Date', inplace=True)  # Set the 'Date' column as the index

# Select the relevant columns
time_series = eabldata[['Close', 'Open', 'High', 'Low', 'Volume']]

# Visualize the time series for each column

# Determine the number of columns
num_columns = len(time_series.columns)

# Create subplots
fig, axes = plt.subplots(nrows=num_columns, ncols=1, figsize=(12, 4 * num_columns))

# Ensure axes is iterable even if there's only one subplot
if num_columns == 1:
    axes = [axes]

# Plot each column in its own subplot
for ax, column in zip(axes, time_series.columns):
    ax.plot(time_series[column], label=column)
    ax.set_title(f'{column} Time Series')
    ax.set_xlabel('Date')
    ax.set_ylabel('Price')
    ax.legend()

plt.tight_layout()
plt.show()

# ADF and KPSS Tests for each column
for column in ['Close', 'Open', 'High', 'Low']:
    print(f"\n== {column} Column ==")
    
    # ADF Test
    adf_result = adfuller(time_series[column].dropna())
    print('ADF Statistic:', adf_result[0]) 
    print('p-value:', adf_result[1]) 
    
    # KPSS Test
    kpss_result = kpss(time_series[column].dropna(), regression='c')
    print('KPSS Statistic:', kpss_result[0]) 
    print('p-value:', kpss_result[1]) 
