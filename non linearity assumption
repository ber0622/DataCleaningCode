#visualizing the data

# Import necessary libraries
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.dates as mdates

# Load your time series data
df = pd.read_csv('C://Users//ADMIN//OneDrive//Desktop//EABL_STOCK_PRICE_CLEANED.csv')

# Convert column names to title case to ensure consistency
df.columns = df.columns.str.title()

# Convert 'Date' column to datetime format
df["Date"] = pd.to_datetime(df["Date"])

# Sort data by date
df.sort_values("Date", inplace=True)

# Define the features to plot
features = ["Open", "High", "Low", "Close", "Volume"]
colors = ["blue", "green", "red", "purple", "orange"]  # Assign colors for each feature

# Create a figure with subplots
fig, axes = plt.subplots(len(features), 1, figsize=(12, 10), sharex=True)

# Loop through each feature and create a scatter plot
for i, feature in enumerate(features):
    if feature in df.columns:  # Check if the column exists in the DataFrame
        axes[i].scatter(df["Date"], df[feature], color=colors[i], alpha=0.6, label=feature)
        axes[i].set_ylabel(feature)  # Set y-axis label
        axes[i].legend()
        axes[i].grid(True)
    else:
        print(f"Warning: '{feature}' column not found in the dataset.")

# Format the x-axis
axes[-1].set_xlabel("Date")  # Add x-axis label to the last subplot
plt.xticks(rotation=45)  # Rotate x-axis labels
plt.gca().xaxis.set_major_locator(mdates.AutoDateLocator())  # Auto adjust date intervals
plt.gca().xaxis.set_major_formatter(mdates.DateFormatter("%Y-%m-%d"))  # Format as YYYY-MM-DD

# Adjust layout for better spacing
plt.tight_layout()

# Show the plots
plt.show()
